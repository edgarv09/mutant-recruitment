# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: mutant_recruitment_test
          POSTGRES_USER: mutant_actions
          POSTGRES_PASSWORD: postgres
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://mutant_actions:postgres@localhost:5432/mutant_recruitment_test"
    steps:    
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
        with:
          bundler-cache: true
          
      - name: Install dependencies
        run: |
          sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev
          gem install bundler          
          
      - name: Install Gems
        run: |
          bundle install --jobs 4 --retry 3

      # Add or replace database setup steps here
      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_DB: mutant_recruitment_test
          POSTGRES_USER: mutant_actions
          POSTGRES_PASSWORD: postgres
        run: |
          cp config/database.ci.yml config/database.yml
          bundle exec rake db:create db:migrate

      # Add or replace test runners here
      - name: Build and test with rspec
        env:
          PGHOST: localhost
          POSTGRES_DB: mutant_recruitment_test
          POSTGRES_USER: mutant_actions
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          COVERAGE=true bundle exec rspec spec

      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage

      - name: Code Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: coverage-report
          badge: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
        with:
          bundler-cache: true
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundle audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      # - name: Lint Ruby files
      #run: bundle exec rubocop --parallel
